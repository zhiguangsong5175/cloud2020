Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/controller/PaymentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/controller/PaymentController.java	(date 1628354097466)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/controller/PaymentController.java	(date 1628354097466)
@@ -0,0 +1,47 @@
+package com.atguigu.springboot.controller;
+
+
+import com.atguigu.springboot.entities.CommonResult;
+import com.atguigu.springboot.entities.Payment;
+import com.atguigu.springboot.service.PaymentService;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import javax.annotation.Resource;
+
+@RestController
+@Slf4j
+public class PaymentController{
+    @Resource
+    private PaymentService paymentService;
+
+    @GetMapping(value = "/payment/create")
+    public CommonResult create(Payment payment)
+    {
+        int result = paymentService.create(payment);
+        log.info("*****插入结果："+result);
+
+        if(result > 0)
+        {
+            return new CommonResult(200,"插入数据库成功,result: "+result,result);
+        }else{
+            return new CommonResult(444,"插入数据库失败！",null);
+        }
+    }
+
+    @GetMapping(value = "/payment/get/{id}")
+    public CommonResult<Payment> getPaymentById(@PathVariable("id") Long id)
+    {
+        Payment payment = paymentService.getPaymentById(id);
+
+        if(payment != null)
+        {
+            return new CommonResult(200,"查询成功,",payment);
+        }else{
+            return new CommonResult(444,"没有对应记录,查询ID: "+id,null);
+        }
+    }
+}
Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/service/PaymentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/service/PaymentService.java	(date 1628331141417)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/service/PaymentService.java	(date 1628331141417)
@@ -0,0 +1,10 @@
+package com.atguigu.springboot.service;
+
+import com.atguigu.springboot.entities.Payment;
+import org.apache.ibatis.annotations.Param;
+
+public interface PaymentService {
+    public int create(Payment payment);
+
+    public Payment getPaymentById(@Param("id") Long id);
+}
Index: cloud2020/cloud-provider-payment8001/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/pom.xml	(date 1628326479970)
+++ cloud2020/cloud-provider-payment8001/pom.xml	(date 1628326479970)
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>cloud2020</artifactId>
+        <groupId>com.atguigu.springcloud</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>cloud-provider-payment8001</artifactId>
+    <dependencies>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
+        <dependency>
+            <groupId>org.mybatis.spring.boot</groupId>
+            <artifactId>mybatis-spring-boot-starter</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>druid-spring-boot-starter</artifactId>
+            <version>1.1.10</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-jdbc</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-devtools</artifactId>
+            <scope>runtime</scope>
+            <optional>true</optional>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <optional>true</optional>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+
+
+    </dependencies>
+
+
+
+</project>
\ No newline at end of file
Index: cloud2020/cloud-provider-payment8001/src/main/resources/mapper/PaymentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/resources/mapper/PaymentMapper.xml	(date 1628353432140)
+++ cloud2020/cloud-provider-payment8001/src/main/resources/mapper/PaymentMapper.xml	(date 1628353432140)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="com.atguigu.springboot.dao.PaymentDao">
+    <insert id="create" parameterType="Payment" useGeneratedKeys="true" keyProperty="id">
+        insert into payment(serial) value (#{serial});
+    </insert>
+    <resultMap id="BaseResultMap" type="com.atguigu.springboot.entities.Payment">
+        <id column="id" property="id" jdbcType="BIGINT"/>
+        <id column="serial" property="serial" jdbcType="VARCHAR"/>
+    </resultMap>
+    <select id="getPaymentById" parameterType="Long" resultMap="BaseResultMap">
+        select id,serial from  payment where id=#{id};
+    </select>
+</mapper>
\ No newline at end of file
Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/dao/PaymentDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/dao/PaymentDao.java	(date 1628353432129)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/dao/PaymentDao.java	(date 1628353432129)
@@ -0,0 +1,13 @@
+package com.atguigu.springboot.dao;
+
+import com.atguigu.springboot.entities.Payment;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Param;
+
+@Mapper
+public interface PaymentDao {
+
+    public int create(Payment payment);
+
+    public Payment getPaymentById(@Param("id") Long id);
+}
Index: cloud2020/cloud-provider-payment8001/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/resources/application.yml	(date 1628353256664)
+++ cloud2020/cloud-provider-payment8001/src/main/resources/application.yml	(date 1628353256664)
@@ -0,0 +1,16 @@
+server:
+  port: 8001
+
+spring:
+  application:
+    name: cloud-payment-service
+  datasource:
+    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
+    driver-class-name: com.mysql.jdbc.Driver              # mysql驱动包
+    url: jdbc:mysql://localhost:3307/db2019?useUnicode=true&characterEncoding=utf-8&useSSL=false
+    username: root
+    password:
+
+mybatis:
+  mapperLocations: classpath:mapper/*.xml
+  type-aliases-package:  com.atguigu.springboot.entities    # 所有Entity别名类所在包
Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/entities/Payment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/entities/Payment.java	(date 1628328989586)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/entities/Payment.java	(date 1628328989586)
@@ -0,0 +1,15 @@
+package com.atguigu.springboot.entities;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.io.Serializable;
+
+@Data
+@AllArgsConstructor //全参数
+@NoArgsConstructor  //空参数
+public class Payment implements Serializable {
+    private Long id;
+    private String serial;
+}
Index: cloud2020/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/pom.xml	(date 1628353826634)
+++ cloud2020/pom.xml	(date 1628353826634)
@@ -0,0 +1,111 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+
+  <groupId>com.atguigu.springcloud</groupId>
+  <artifactId>cloud2020</artifactId>
+  <version>1.0-SNAPSHOT</version>
+  <modules>
+    <module>cloud-provider-payment8001</module>
+  </modules>
+  <packaging>pom</packaging><!-- 这里添加，注意不是jar或war -->
+
+  <!-- 统一管理jar包版本 -->
+  <properties>
+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    <maven.compiler.source>1.8</maven.compiler.source>
+    <maven.compiler.target>1.8</maven.compiler.target>
+    <junit.version>4.12</junit.version>
+    <log4j.version>1.2.17</log4j.version>
+    <lombok.version>1.16.18</lombok.version>
+    <mysql.version>5.1.47</mysql.version>
+    <druid.version>1.1.16</druid.version>
+    <mybatis.spring.boot.version>1.3.0</mybatis.spring.boot.version>
+  </properties>
+
+  <!-- 子模块继承之后，提供作用：
+      锁定版本+子modlue不用写groupId和version -->
+  <dependencyManagement>
+    <dependencies>
+      <!--spring boot 2.2.2-->
+      <dependency>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-dependencies</artifactId>
+        <version>2.2.2.RELEASE</version>
+        <type>pom</type>
+        <scope>import</scope>
+      </dependency>
+      <!--spring cloud Hoxton.SR1-->
+      <dependency>
+        <groupId>org.springframework.cloud</groupId>
+        <artifactId>spring-cloud-dependencies</artifactId>
+        <version>Hoxton.SR1</version>
+        <type>pom</type>
+        <scope>import</scope>
+      </dependency>
+      <!--spring cloud alibaba 2.1.0.RELEASE-->
+      <dependency>
+        <groupId>com.alibaba.cloud</groupId>
+        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
+        <version>2.1.0.RELEASE</version>
+        <type>pom</type>
+        <scope>import</scope>
+      </dependency>
+      <dependency>
+        <groupId>mysql</groupId>
+        <artifactId>mysql-connector-java</artifactId>
+        <version>${mysql.version}</version>
+      </dependency>
+      <dependency>
+        <groupId>com.alibaba</groupId>
+        <artifactId>druid</artifactId>
+        <version>${druid.version}</version>
+      </dependency>
+      <dependency>
+        <groupId>org.mybatis.spring.boot</groupId>
+        <artifactId>mybatis-spring-boot-starter</artifactId>
+        <version>${mybatis.spring.boot.version}</version>
+      </dependency>
+      <dependency>
+        <groupId>junit</groupId>
+        <artifactId>junit</artifactId>
+        <version>${junit.version}</version>
+      </dependency>
+      <dependency>
+        <groupId>log4j</groupId>
+        <artifactId>log4j</artifactId>
+        <version>${log4j.version}</version>
+      </dependency>
+      <dependency>
+        <groupId>org.projectlombok</groupId>
+        <artifactId>lombok</artifactId>
+        <version>${lombok.version}</version>
+        <optional>true</optional>
+      </dependency>
+      <dependency>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-project-info-reports-plugin</artifactId>
+        <version>3.0.0</version>
+        <type>maven-plugin</type>
+      </dependency>
+
+    </dependencies>
+  </dependencyManagement>
+
+  <build>
+    <plugins>
+      <plugin>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-maven-plugin</artifactId>
+<!--        <version>2.0.1.RELEASE</version>-->
+        <configuration>
+          <fork>true</fork>
+          <addResources>true</addResources>
+        </configuration>
+      </plugin>
+    </plugins>
+  </build>
+
+</project>
Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/entities/CommonResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/entities/CommonResult.java	(date 1628329535742)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/entities/CommonResult.java	(date 1628329535742)
@@ -0,0 +1,18 @@
+package com.atguigu.springboot.entities;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+public class CommonResult<T> {
+    private Integer code;
+    private String message;
+    private T data;
+
+    public CommonResult(Integer code, String message){
+        this(code, message, null);
+    }
+}
Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/PaymentMain8001.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/PaymentMain8001.java	(date 1628328851979)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/PaymentMain8001.java	(date 1628328851979)
@@ -0,0 +1,11 @@
+package com.atguigu.springboot;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class PaymentMain8001 {
+    public static void main(String[] args) {
+        SpringApplication.run(PaymentMain8001.class,args);
+    }
+}
Index: cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/service/impl/PaymentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/service/impl/PaymentServiceImpl.java	(date 1628331414623)
+++ cloud2020/cloud-provider-payment8001/src/main/java/com/atguigu/springboot/service/impl/PaymentServiceImpl.java	(date 1628331414623)
@@ -0,0 +1,26 @@
+package com.atguigu.springboot.service.impl;
+
+import com.atguigu.springboot.dao.PaymentDao;
+import com.atguigu.springboot.entities.Payment;
+import com.atguigu.springboot.service.PaymentService;
+import org.springframework.stereotype.Service;
+
+import javax.annotation.Resource;
+
+@Service
+public class PaymentServiceImpl implements PaymentService {
+
+    @Resource
+    private PaymentDao paymentDao;
+
+
+    @Override
+    public int create(Payment payment) {
+        return paymentDao.create(payment);
+    }
+
+    @Override
+    public Payment getPaymentById(Long id) {
+        return paymentDao.getPaymentById(id);
+    }
+}
